# Apache2 虚拟主机配置
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule auth_openidc_module modules/mod_auth_openidc.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule rewrite_module modules/mod_rewrite.so

<VirtualHost *:80>
    ServerName localhost

    # # 加载 SSL 模块（可选，如果已全局启用）
    # LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so

    # SSL配置
    # SSLEngine on
    # SSLCertificateChainFile /etc/letsencrypt/live/localhost/fullchain.pem
    # SSLCertificateKeyFile   /usr/local/apache2/conf/certs/server.key
    # SSLCertificateFile      /usr/local/apache2/conf/certs/server.crt
    # SSLCertificateFile      "/etc/ssl/server.crt"  # 证书文件路径
    # SSLCertificateKeyFile   "/etc/ssl/server.key"

    RequestHeader unset X-Remote-User early

    # OIDC核心配置
    # 这个是 OIDC 集成应用的服务发现地址，以 .well-known/openid-configuration 结尾，由集成应用管理员提供
    OIDCProviderMetadataURL https://anycross.feishu.cn/sso/FMV5XB7343M/.well-known/openid-configuration   
    # 这里随机生成一个足够长的密钥，例如通过：openssl rand 24 | base64
    OIDCCryptoPassphrase    9LIlPbTREdpYskasrHoAYJooNqbCtjNz 
    # 这个是 OIDC 集成应用的 App ID，由集成应用管理员提供   
    OIDCClientID            ac9ef9da6bddcf4db98172dbc3d7cd463f
    # 这个是 OIDC 集成应用的 App Secret，由集成应用管理员提供
    OIDCClientSecret        RnZ4odGQQ_lkS1Gc2dj3jZtmUSP5OCe_J6lT4-CbE4U
    OIDCScope               "openid email profile"
    OIDCRemoteUserClaim     email "^(.+?)@.+$" "$1"
    OIDCAuthNHeader         "X-Remote-User"
    OIDCPassUserInfoAs      claims json
    OIDCPassClaimsAs        both none

    # 在本地开发环境中可暂时允许 HTTP
    OIDCSSLValidateServer Off

    OIDCRedirectURI         http://localhost:8000/auth/callback
    # 添加以下参数（示例值根据飞书要求调整）  或 client_secret_post
    OIDCProviderTokenEndpointAuth client_secret_basic
    
    # 回调地址处理
    <Location /auth/callback>
        AuthType openid-connect
        Require valid-user
    </Location>

    ProxyPreserveHost on

    # 代理Guacamole
    <Location /guacamole/>
        AuthType openid-connect
        Require valid-user
        ProxyPass        http://guacamole:8080/guacamole/ flushpackets=on
        ProxyPassReverse http://guacamole:8080/guacamole/
    </Location>

    # WebSocket代理
    <Location /guacamole/websocket-tunnel>
        AuthType openid-connect
        Require valid-user
        ProxyPass        ws://guacamole:8080/guacamole/websocket-tunnel
        ProxyPassReverse ws://guacamole:8080/guacamole/websocket-tunnel
    </Location>

    RewriteEngine on
    RewriteRule ^/?$ /guacamole/ [R,L]
    RewriteRule ^/guacamole$ /guacamole/ [R,L]

    ErrorLog /usr/local/apache2/logs/error.log
    CustomLog /usr/local/apache2/logs/access.log combined
</VirtualHost>